module.exports = {
    preset: "react-native",
    moduleFileExtensions: [
        "ts",
        "tsx",
        "web.js",
        "mjs",
        "js",
        "json",
        "web.jsx",
        "jsx",
        "node"
    ],
    collectCoverageFrom: ["src/**/*.{js,jsx,ts,tsx,mjs}"],
    coveragePathIgnorePatterns: [
        "<rootDir>/build/",
        "<rootDir>/node_modules/",
        "<rootDir>/src/(Root.*.(js|jsx))",
        "<rootDir>/src/index.js",
        "<rootDir>/src/serviceWorker.ts",
        // "<rootDir>/src/*/{initialState.ts}",
        "<rootDir>/src/*/*/[A-Za-z]+(P|p)rop.*.(js|jsx)",
        "<rootDir>/src/store/DevTools.js",
        "<rootDir>/src/store/configureStore.(prod|staging|dev).js",
        "<rootDir>/src/store/configureStore.ts",
        "<rootDir>/src/store/middleware.ts",
        "<rootDir>/src/*/endpoints.+\\.js$",
        "<rootDir>/src/api/constants.ts",
        "<rootDir>/src/api/endpoints.js",
        "<rootDir>/src/actionTypes/",
        "<rootDir>/src/components/messages/StyledMessage.tsx",
        "<rootDir>/src/components/nickname/StyledNickname.tsx",
        "<rootDir>/src/components/timestamp/StyledTimestamp.tsx",
        "<rootDir>/src/pages/StyledPage.tsx",
        "<rootDir>/src/components/chat/StyledChatArea.tsx",
        "<rootDir>/src/components/MessageSender/StyledMessageSender.tsx",
        "<rootDir>/src/components/MessageSender/index.tsx",
        "<rootDir>/src/components/MessageSender/constants.ts",
        "<rootDir>/src/templates/UserProfile/StyledUserProfile.tsx",
        "<rootDir>/src/templates/UserProfile/index.tsx",
        "<rootDir>/src/components/RadioGroup/index.tsx",
        "<rootDir>/src/components/RadioGroup/StyledRadioGroup.tsx",
        "<rootDir>/src/templates/ThemeSelector/StyledThemeSelector.tsx",
        "<rootDir>/src/templates/ThemeSelector/index.tsx",
        "<rootDir>/src/store/socket/state.ts",
        "<rootDir>/src/store/message/state.ts",
        "<rootDir>/src/store/message/types.ts",
        "<rootDir>/src/services/socket/constants.ts",
        "<rootDir>/src/providers/translations/context.ts",
        "<rootDir>/src/providers/translations/types.ts",
        "<rootDir>/src/providers/theme/types.ts",
        "<rootDir>/src/providers/theme/context.ts",
        "<rootDir>/src/i18n/translations-mock.ts",
        "<rootDir>/src/components/navigation/StyledNavigation.tsx",
        "<rootDir>/src/react-app-env.d.ts",
        "<rootDir>/src/index.tsx",
        "<rootDir>/src/Root.tsx",
        "<rootDir>/src/App.tsx",
        "<rootDir>/src/templates/ClockModeSelector/index.tsx",
        "<rootDir>/src/templates/ClockModeSelector/StyledClockMode.tsx",
        "<rootDir>/src/templates/SendingOptions/index.tsx",
        "<rootDir>/src/templates/SendingOptions/StyledSendingOptions.tsx",
        "<rootDir>/src/i18n/translations-mock.ts",
        "<rootDir>/src/store/rootReducer.ts",
        "<rootDir>/src/templates/LanguageSelector/index.tsx",
        "<rootDir>/src/templates/LanguageSelector/StyledLanguageSelector.tsx",
        "<rootDir>/src/components/button/StyledButton.tsx"
    ],
    setupFiles: [
        "<rootDir>/config/polyfills.js",
        "<rootDir>/config/setupTests.js",
        "<rootDir>/config/browserMock.js"
    ],
    testMatch: [
        "<rootDir>/__tests__/**/*.{js,ts,tsx,jsx,mjs}",
        "<rootDir>/?(*.)(spec|test).{js,jsx,ts,tsx,mjs}",
        "<rootDir>/src/**/__tests__/**/*.{js,ts,tsx,jsx,mjs}",
        "<rootDir>/src/**/?(*.)(spec|test).{js,ts,tsx,jsx,mjs}"
    ],
    testEnvironment: "node",
    testURL: "http://localhost",
    transform: {
        "^.+\\.(ts|tsx|js|jsx|mjs)$": "<rootDir>/node_modules/babel-jest",
        "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
        "^(?!.*\\.(js|jsx|mjs|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    // TODO: transform ignore patterns
    transformIgnorePatterns: ["[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs)$"],
    // TODO: add module mappers for stylesheets
    moduleNameMapper: {
        "^react-native$": "react-native-web",
        // "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
        // "\\.(css|less|scss)$": "<rootDir>/src/assets/styles",
        // "\\.(css)$": "<rootDir>/node_modules/",
        // "\\.(png|jpg|svg)$": "<rootDir>/src/assets/images",
        "^@styles/(.*)$": "<rootDir>/src/styles/$1",
        "^@store/(.*)$": "<rootDir>/src/store/$1",
        "^@components/(.*)$": "<rootDir>/src/components/$1",
        "^@utils": "<rootDir>/src/utils"
    },
    setupFilesAfterEnv: ["<rootDir>/config/setupTests.js"]
};